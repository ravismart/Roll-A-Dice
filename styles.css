/* styles.css */
body {
    font-family: Arial, sans-serif;
    background-color: black;
    color: white;
    text-align: center;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    margin: 0;
    overflow: hidden;
}

.container {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    gap: 30px; /* Gap between dice and counter */
    cursor: pointer;
}

.dice-container {
    display: flex;
    flex-direction: column; /* Stack dice vertically */
    align-items: center;
    justify-content: center;
    height: 70vh; /* Use 70% of the mobile screen */
    gap: 30px; /* Gap between dice */
    position: relative;
}

.dice {
    width: 70vw; /* 70% of viewport width */
    height: 70vw; /* 70% of viewport height */
    max-width: 250px; /* Max width for larger screens */
    max-height: 250px; /* Max height for larger screens */
    background-color: white;
    border-radius: 15px; /* Smooth edges */
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: 0 0 30px cyan;
    position: relative;
    transform-style: preserve-3d;
    transition: transform 1s ease-out; /* Smooth 1-second transition */
    /* Removed continuous rotation */
}

.dot-container {
    width: 100%;
    height: 100%;
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: repeat(3, 1fr);
    gap: 5px;
    justify-items: center;
    align-items: center;
    position: relative;
}

.dot {
    width: 15px;
    height: 15px;
    background-color: black;
    border-radius: 50%;
}

.rolling {
    animation: roll 1s ease-in-out;
}

@keyframes roll {
    0% {
        transform: rotateX(0deg) rotateY(0deg) rotateZ(0deg);
    }
    25% {
        transform: rotateX(90deg) rotateY(180deg) rotateZ(90deg);
    }
    50% {
        transform: rotateX(180deg) rotateY(0deg) rotateZ(180deg);
    }
    75% {
        transform: rotateX(270deg) rotateY(180deg) rotateZ(270deg);
    }
    100% {
        transform: rotateX(360deg) rotateY(360deg) rotateZ(360deg);
    }
}

/* Adding an offset animation delay to each die for a staggered effect */
#dice1.rolling {
    animation-delay: 0s;
}

#dice2.rolling {
    animation-delay: 0.2s; /* Slight delay for the second dice */
}

.result {
    font-size: 2rem;
    color: cyan;
    position: relative;
    width: 100%;
    text-align: center;
    font-weight: bold;
}
